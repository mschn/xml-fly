@import '../../colors.scss';

.node {
  font-family: 'Roboto Mono', monospace;
  font-size: 0.8rem;
  display: table;
  width: 100%;

  .btn-sm {
    line-height: 1;
    padding: 0;

    fa-icon {
      color: white;
      margin: 0.3rem;
    }
  }

  .tagname {
    color: $tagname-col;
    cursor: pointer;

    .tag {
      color: $tag-col;
    }
  }

  &.text-node > .header > .tagname {
    margin-left: 1.75rem;
  }

  .equals {
    color: $tag-col;
  }

  .attr-name {
    color: $attr-col;
    white-space: nowrap;
    cursor: pointer;
  }

  .attr-value {
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-all;
    min-width: 120px;
    color: $attr-val-col;
    cursor: pointer;
  }

  .inner {
    border-left: 4px solid transparent;
  }

  &.selected {
    background: $selected-bg-col;
    border-radius: 5px;
  }

  .highlighted {
    background: $highlight-bg-col;
    border-radius: 5px;
    border: $highlight-border;

    .highlight-text {
      background-color: $highlight-head-bg-col;
      color: white;
      border-radius: 5px 5px 0 0;
      padding: 0.5rem;

      .input[role='textbox'] {
        white-space: pre-wrap;
      }
    }
  }

  &.text-node.noTagName.selected > .header > .value {
    border-radius: 5px;
  }

  .attr {
    .selected {
      & .attr-name {
        background: $selected-bg-col;
        border-radius: 5px 0 0 5px;
        border-right: 0;
      }

      & .equals {
        background: $selected-bg-col;
      }

      & .attr-value {
        background: $selected-bg-col;
        border-radius: 0 5px 5px 0;
      }

      &.highlighted .attr-name {
        border-radius: 0 0 0 5px;
      }

      &.highlighted .attr-value {
        border-radius: 0 0 5px 0;
      }
    }
  }
}

.first-node {
  border: 0;
  margin: 0.5rem;
}

.value {
  cursor: pointer;
}

.selected ::ng-deep tr {
  th {
    border-color: $selected-array-col !important;
    background: $selected-array-col !important;
  }

  td {
    border-color: $selected-array-col !important;
  }
}
